{"version":3,"file":"static/js/755.5cd12f9a.chunk.js","mappings":"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","sources":["components/Banner/index.js","constants/global.js","constants/images.js","custom-fields/InputField/index.js","components/RandomPhoto/index.js","custom-fields/RandomPhotoField/index.js","custom-fields/SelectField/index.js","features/Photo/components/PhotoForm/index.js","features/Photo/pages/AddEditPage/index.js","features/Photo/components/PhotoCard/index.js","features/Photo/components/PhotoList/index.js","features/Photo/pages/MainPage/index.js","features/Photo/index.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport \"./Banner.scss\";\r\n\r\nBanner.propTypes = {\r\n  title: PropTypes.string,\r\n  backgroundUrl: PropTypes.string,\r\n};\r\n\r\nBanner.defaultProps = {\r\n  title: \"\",\r\n  backgroundUrl: \"\",\r\n};\r\n\r\nfunction Banner(props) {\r\n  const { title, backgroundUrl } = props;\r\n\r\n  const bannerStyle = backgroundUrl\r\n    ? { backgroundImage: `url(${backgroundUrl})` }\r\n    : {};\r\n\r\n  return (\r\n    <section className=\"banner\" style={bannerStyle}>\r\n      <h1 className=\"banner__title\">{title}</h1>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","export const PHOTO_CATEGORY_OPTIONS = [\r\n  { value: 1, label: \"Technology\" },\r\n  { value: 2, label: \"Education\" },\r\n  { value: 3, label: \"Nature\" },\r\n  { value: 4, label: \"Animals\" },\r\n  { value: 5, label: \"Styles\" },\r\n];\r\n","import orangeBackground from \"../assets/images/orange-bg.jpg\";\r\nimport blueBackground from \"../assets/images/blue-bg.jpg\";\r\nimport colorfulBackground from \"../assets/images/colorful-bg.jpg\";\r\nimport pinkBackground from \"../assets/images/pink-bg.jpg\";\r\n\r\nconst Images = {\r\n  ORANGE_BG: orangeBackground,\r\n  BLUE_BG: blueBackground,\r\n  COLORFUL_BG: colorfulBackground,\r\n  PINK_BG: pinkBackground,\r\n};\r\n\r\nexport default Images;\r\n","import { ErrorMessage } from \"formik\";\r\nimport { FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nfunction InputField(props) {\r\n  // field này là của Formik bao gồm name, value, onChange, onBlur\r\n  const { field, form, type, label, placeholder, disabled } = props;\r\n  const { name } = field;\r\n\r\n  // Validate form\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n      <Input\r\n        id={name}\r\n        {...field}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        invalid={showError} // Dùng để show form feed back\r\n      />\r\n      <ErrorMessage name={name} component={FormFeedback}></ErrorMessage>\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./RandomPhoto.scss\";\r\n\r\nRandomPhoto.propTypes = {\r\n  name: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  onImageUrlChange: PropTypes.func,\r\n  onRandomButtonBlur: PropTypes.func,\r\n};\r\n\r\nRandomPhoto.defaultProps = {\r\n  name: \"\",\r\n  imageUrl: \"\",\r\n  onImageUrlChange: null,\r\n  onRandomButtonBlur: null,\r\n};\r\n\r\nconst getRandomImageUrl = () => {\r\n  const randomId = Math.trunc(Math.random() * 2000);\r\n  return `https://picsum.photos/id/${randomId}/300/300`;\r\n};\r\n\r\nfunction RandomPhoto(props) {\r\n  const { name, imageUrl, onImageUrlChange, onRandomButtonBlur } = props;\r\n\r\n  const handleRandomPhotoClick = async () => {\r\n    if (onImageUrlChange) {\r\n      const randomImageUrl = getRandomImageUrl();\r\n      onImageUrlChange(randomImageUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"random-photo\">\r\n      <div className=\"random-photo__button\">\r\n        <Button\r\n          outline\r\n          name={name}\r\n          color=\"primary\"\r\n          onBlur={onRandomButtonBlur}\r\n          onClick={handleRandomPhotoClick}\r\n        >\r\n          Random a photo\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"random-photo__photo\">\r\n        {imageUrl && (\r\n          <img\r\n            src={imageUrl}\r\n            alt=\"Ooops ... not found. Please click random again!\"\r\n            onError={handleRandomPhotoClick}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomPhoto;\r\n","import { ErrorMessage } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FormFeedback, FormGroup, Label } from \"reactstrap\";\r\nimport RandomPhoto from \"../../components/RandomPhoto\";\r\n\r\nRandomPhotoField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  label: PropTypes.string,\r\n};\r\n\r\nRandomPhotoField.defaultProps = {\r\n  label: \"\",\r\n};\r\n\r\nfunction RandomPhotoField(props) {\r\n  const { field, form, label } = props;\r\n  const { name, value, onBlur } = field;\r\n\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  const handleImageUrlChange = (newImageUrl) => {\r\n    form.setFieldValue(name, newImageUrl);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n\r\n      <RandomPhoto\r\n        name={name}\r\n        imageUrl={value}\r\n        onImageUrlChange={handleImageUrlChange}\r\n        onRandomButtonBlur={onBlur}\r\n      />\r\n      <div className={showError ? \"is-invalid\" : \"\"}></div>\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default RandomPhotoField;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { ErrorMessage } from \"formik\";\r\nimport { FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nSelectField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  options: PropTypes.array,\r\n};\r\n\r\nSelectField.defaultProps = {\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  disabled: false,\r\n  options: [],\r\n};\r\n\r\nfunction SelectField(props) {\r\n  const { field, form, options, label, placeholder, disabled } = props;\r\n  const { name, value } = field;\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n  console.log(touched[name]);\r\n  const selectedOption = options.find((option) => option.value === value);\r\n\r\n  const handleSelectedOptionChange = (selectedOption) => {\r\n    const selectedValue = selectedOption\r\n      ? selectedOption.value\r\n      : selectedOption;\r\n\r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    };\r\n    field.onChange(changeEvent);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n\r\n      <Select\r\n        id={name}\r\n        {...field}\r\n        value={selectedOption}\r\n        onChange={handleSelectedOptionChange}\r\n        placeholder={placeholder}\r\n        isDisabled={disabled}\r\n        options={options}\r\n        className={showError ? \"is-invalid\" : \"\"}\r\n      />\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default SelectField;\r\n","import { FastField, Form, Formik } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Button, FormGroup, Input, Label, Spinner } from \"reactstrap\";\r\nimport { PHOTO_CATEGORY_OPTIONS } from \"../../../../constants/global\";\r\nimport Images from \"../../../../constants/images\";\r\nimport InputField from \"../../../../custom-fields/InputField\";\r\nimport RandomPhotoField from \"../../../../custom-fields/RandomPhotoField\";\r\nimport SelectField from \"../../../../custom-fields/SelectField\";\r\nimport * as Yup from \"yup\";\r\n\r\nPhotoForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nPhotoForm.defaultProps = {\r\n  onSubmit: null,\r\n};\r\n\r\nfunction PhotoForm(props) {\r\n  const { initialValues, isAddMode } = props;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"This field is required\"),\r\n    categoryId: Yup.number().required(\"This field is required\").nullable(),\r\n    photo: Yup.string().required(\"This field is required\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={props.onSubmit}\r\n    >\r\n      {(formikProps) => {\r\n        const { values, errors, touched, isSubmitting } = formikProps;\r\n        return (\r\n          <Form>\r\n            <FastField\r\n              name=\"title\"\r\n              component={InputField}\r\n              label=\"Title\"\r\n              placeholder=\"Eg: Wow nature ...\"\r\n            />\r\n            <FastField\r\n              name=\"categoryId\"\r\n              component={SelectField}\r\n              label=\"Category\"\r\n              placeholder=\"What's your photo category?\"\r\n              options={PHOTO_CATEGORY_OPTIONS}\r\n            />\r\n            <FastField\r\n              name=\"photo\"\r\n              component={RandomPhotoField}\r\n              label=\"Photo\"\r\n            />\r\n\r\n            <FormGroup>\r\n              <Button type=\"submit\" color={isAddMode ? \"primary\" : \"success\"}>\r\n                {isAddMode ? \"Add to album\" : \"Edit picture\"}\r\n              </Button>\r\n              {isSubmitting && <Spinner size=\"sm\" />}\r\n            </FormGroup>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default PhotoForm;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Banner from \"../../../../components/Banner\";\r\nimport PhotoForm from \"../../components/PhotoForm\";\r\nimport { addPhoto, updatePhoto } from \"../../photoSlice\";\r\nimport \"./styles.scss\";\r\n\r\nAddEditPage.propTypes = {};\r\n\r\nfunction AddEditPage(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { photoId } = useParams();\r\n  const isAddMode = !photoId;\r\n\r\n  const editPhoto = useSelector((state) =>\r\n    state.photos.find((x) => x.id === +photoId)\r\n  );\r\n\r\n  const initialValues = isAddMode\r\n    ? {\r\n        title: \"\",\r\n        categoryId: null,\r\n        photo: \"\",\r\n      }\r\n    : editPhoto;\r\n\r\n  const handleSubmit = (values) => {\r\n    if (isAddMode) {\r\n      const action = addPhoto(values);\r\n      dispatch(action);\r\n    } else {\r\n      const action = updatePhoto(values);\r\n      dispatch(action);\r\n    }\r\n    history.push(\"/photos\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-edit\">\r\n      <Banner title=\"Pick your amazing photo 😎\" />\r\n\r\n      <div className=\"photo-edit__form\">\r\n        <PhotoForm\r\n          isAddMode={isAddMode}\r\n          initialValues={initialValues}\r\n          onSubmit={handleSubmit}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEditPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./PhotoCard.scss\";\r\n\r\nPhotoCard.propTypes = {\r\n  photo: PropTypes.object,\r\n  onEditClick: PropTypes.func,\r\n  onRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoCard.defaultProps = {\r\n  photo: {},\r\n  onEditClick: null,\r\n  onRemoveClick: null,\r\n};\r\n\r\nfunction PhotoCard(props) {\r\n  const { photo, onEditClick, onRemoveClick } = props;\r\n\r\n  const handleEditClick = () => {\r\n    if (onEditClick) onEditClick(photo);\r\n  };\r\n\r\n  const handleRemoveClick = () => {\r\n    if (onRemoveClick) onRemoveClick(photo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo\">\r\n      <img src={photo.photo} alt={photo.title} />\r\n\r\n      <div className=\"photo__overlay\">\r\n        <h3 className=\"photo__title\">{photo.title}</h3>\r\n\r\n        <div className=\"photo__actions\">\r\n          <div>\r\n            <Button outline size=\"sm\" color=\"light\" onClick={handleEditClick}>\r\n              Edit\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              outline\r\n              size=\"sm\"\r\n              color=\"danger\"\r\n              onClick={handleRemoveClick}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport PhotoCard from \"../PhotoCard\";\r\n\r\nPhotoList.propTypes = {\r\n  photoList: PropTypes.array,\r\n  onPhotoEditClick: PropTypes.func,\r\n  onPhotoRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoList.defaultProps = {\r\n  photoList: [],\r\n  onPhotoEditClick: null,\r\n  onPhotoRemoveClick: null,\r\n};\r\n\r\nfunction PhotoList(props) {\r\n  const { photoList, onPhotoEditClick, onPhotoRemoveClick } = props;\r\n\r\n  return (\r\n    <Row>\r\n      {photoList.map((photo) => (\r\n        <Col key={photo.title} xs=\"12\" md=\"6\" lg=\"3\">\r\n          <PhotoCard\r\n            photo={photo}\r\n            onEditClick={onPhotoEditClick}\r\n            onRemoveClick={onPhotoRemoveClick}\r\n          />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default PhotoList;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport Banner from \"../../../../components/Banner\";\r\nimport Images from \"../../../../constants/images\";\r\nimport PhotoList from \"../../components/PhotoList\";\r\nimport { removePhoto } from \"../../photoSlice\";\r\n\r\nfunction MainPage() {\r\n  const photos = useSelector((state) => state.photos);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handlePhotoEditClick = (photo) => {\r\n    console.log(\"Edit: \", photo);\r\n    const editPhotoUrl = `/photos/${photo.id}`;\r\n    history.push(editPhotoUrl);\r\n  };\r\n\r\n  const handlePhotoRemoveClick = (photo) => {\r\n    console.log(\"Remove: \", photo);\r\n    const removePhotoId = photo.id;\r\n    const action = removePhoto(removePhotoId);\r\n    dispatch(action);\r\n  };\r\n  return (\r\n    <div className=\"photo-main\">\r\n      <Banner title=\"Your awesome photos 🎉\" backgroundUrl={Images.PINK_BG} />\r\n\r\n      <Container className=\"text-center\">\r\n        <div className=\"py-5\">\r\n          <Link to=\"/photos/add\">Add new photo</Link>\r\n        </div>\r\n\r\n        <PhotoList\r\n          photoList={photos}\r\n          onPhotoEditClick={handlePhotoEditClick}\r\n          onPhotoRemoveClick={handlePhotoRemoveClick}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport NotFound from \"../../components/NotFound\";\r\nimport AddEditPage from \"./pages/AddEditPage\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nPhoto.propTypes = {};\r\n\r\nfunction Photo(props) {\r\n  let { path, url } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path={url} component={MainPage} />\r\n\r\n      <Route path={`${url}/add`} component={AddEditPage} />\r\n      <Route path={`${url}/:photoId`} component={AddEditPage} />\r\n\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n"],"names":["Banner","props","title","backgroundUrl","bannerStyle","backgroundImage","className","style","defaultProps","PHOTO_CATEGORY_OPTIONS","value","label","ORANGE_BG","BLUE_BG","COLORFUL_BG","PINK_BG","field","form","type","placeholder","name","disabled","errors","touched","showError","for","id","invalid","component","FormFeedback","RandomPhoto","imageUrl","onImageUrlChange","onRandomButtonBlur","getRandomImageUrl","randomId","Math","trunc","random","handleRandomPhotoClick","randomImageUrl","outline","color","onBlur","onClick","src","alt","onError","RandomPhotoField","newImageUrl","setFieldValue","SelectField","options","console","log","selectedOption","find","option","onChange","selectedValue","changeEvent","target","isDisabled","PhotoForm","initialValues","isAddMode","validationSchema","Yup","shape","required","categoryId","nullable","photo","onSubmit","formikProps","values","isSubmitting","InputField","size","dispatch","useDispatch","history","useHistory","photoId","useParams","editPhoto","useSelector","state","photos","x","action","addPhoto","updatePhoto","push","PhotoCard","onEditClick","onRemoveClick","PhotoList","photoList","onPhotoEditClick","onPhotoRemoveClick","map","xs","md","lg","Images","to","editPhotoUrl","removePhotoId","removePhoto","useRouteMatch","url","path","exact","MainPage","AddEditPage","NotFound"],"sourceRoot":""}